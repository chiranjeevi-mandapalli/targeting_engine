name: Go CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  GO_VERSION: 1.20
  DOCKER_IMAGE: ghcr.io/your-username/targeting-engine
  SEED_DATABASE: "false" # Set to "true" for dev/testing environments

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
      redis:
        image: redis:6
        ports:
          - 6379:6379
        options: --health-cmd "redis-cli ping" --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y postgresql-client

    - name: Run tests
      env:
        DATABASE_URL: "postgres://testuser:testpass@localhost:5432/testdb?sslmode=disable"
        REDIS_URL: "redis://localhost:6379/0"
        SEED_DATABASE: "true"
      run: |
        go test -v -coverprofile=coverage.out ./...
        go tool cover -func=coverage.out

  build:
    name: Build
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Build
      run: go build -v ./cmd/server/

    - name: Build Docker image
      run: |
        docker build -t ${{ env.DOCKER_IMAGE }}:latest .

  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Push Docker image
      run: |
        docker build -t ${{ env.DOCKER_IMAGE }}:${{ github.sha }} .
        docker push ${{ env.DOCKER_IMAGE }}:${{ github.sha }}
        docker push ${{ env.DOCKER_IMAGE }}:latest

    - name: Deploy to Kubernetes (example)
      if: github.ref == 'refs/heads/main'
      run: |
        kubectl set image deployment/targeting-engine targeting-engine=${{ env.DOCKER_IMAGE }}:${{ github.sha }}